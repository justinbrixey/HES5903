pip install ezc3d
library(shiny); runApp('OUSportScience/Baseball/BSBL2024-25/appSample/BSBLDashboard.R')
library(shiny); runApp('OUSportScience/Baseball/BSBL2024-25/appSample/BSBLDashboard.R')
runApp('HES5903/HES5903/Dashboard.R')
runApp('HES5903/HES5903/Dashboard.R')
runApp('HES5903/HES5903/Dashboard.R')
runApp('HES5903/HES5903/Dashboard.R')
runApp('HES5903/HES5903/Dashboard.R')
runApp('HES5903/HES5903/Dashboard.R')
runApp('HES5903/HES5903/Dashboard.R')
runApp('HES5903/HES5903/Dashboard.R')
runApp('HES5903/HES5903/Dashboard.R')
runApp('HES5903/HES5903/Dashboard.R')
setwd("~/Documents/GitHub/HES5903/HES5903")
# ---------- Global Section ----------
data <- read.csv("Data/strengthMetrics.csv", stringsAsFactors = FALSE)
colnames(data)
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
source("~/Documents/GitHub/OUSportScience/Baseball/BSBL2024-25/Pulse_RTP.R", echo=TRUE)
CleanPulseData()
setwd("~/Documents/GitHub/OUSportScience/Baseball/BSBL2024-25")
CleanPulseData()
GenerateDailyWorkloadReport("4/16/2025")
input_date <- as.Date("4/16/2025", format = "%m/%d/%Y")
# Load data
cleanPulse <- read_csv("Data/CleanPulse.csv", show_col_types = FALSE)
cleanPulse$Date <- as.Date(cleanPulse$Date)
RX <- read_csv("Data/IR/NathanSmithburg.csv", show_col_types = FALSE)
RX$Date <- as.Date(RX$Date, format = "%m/%d/%y")
Velo <- read_csv("Data/IR/Velocity.csv", show_col_types = FALSE)
Velo$Date <- as.Date(Velo$Date, format = "%m/%d/%y")
# Create daily_long for throw plot
daily_long <- cleanPulse %>%
select(Date, HighIntensityWorkload_k, NonHighIntensityWorkload_k) %>%
pivot_longer(
cols = c(NonHighIntensityWorkload_k, HighIntensityWorkload_k),
names_to = "Intensity",
values_to = "WorkloadValue_k"
) %>%
mutate(Intensity = factor(Intensity,
levels = c("NonHighIntensityWorkload_k", "HighIntensityWorkload_k"),
labels = c("Total Workload", "High Intensity")))
# Filter last 8 days including input_date
last_9_dates_throw <- cleanPulse %>%
filter(Date <= input_date) %>%
distinct(Date) %>%
arrange(desc(Date)) %>%
slice(1:10) %>%
pull(Date)
daily_long_filtered <- daily_long %>%
filter(Date %in% last_9_dates_throw)
daily_workload_filtered <- cleanPulse %>%
filter(Date %in% last_9_dates_throw)
# Throw plot
Throw_plot <- ggplot(daily_long_filtered, aes(x = Date, y = WorkloadValue_k, fill = Intensity)) +
geom_col(width = 1.5) +
scale_fill_manual(values = c("Total Workload" = "gray95", "High Intensity" = "red3"),
labels = c("Total Throws", "High Intensity Throws"),
guide = guide_legend(override.aes = list(color = "black"))) +
geom_col(data = daily_workload_filtered, aes(x = Date, y = TotalWorkload_k),
fill = NA, color = "black", size = 1, width = 1.5) +
geom_text(data = daily_workload_filtered,
aes(x = Date, y = NonHighIntensityWorkload_k + HighIntensityWorkload_k + 15,
label = ThrowCount),
inherit.aes = FALSE,
size = 5, color = "black") +
geom_text(data = daily_workload_filtered,
aes(x = Date, y = HighIntensityWorkload_k + 15,
label = HighIntensityThrowCount),
inherit.aes = FALSE,
size = 5, color = "red3") +
geom_text(data = daily_workload_filtered,
aes(x = Date, y = TotalWorkload_k + 75,
label = paste("Velo:", round(avg_velo, 1), "mph", "\nDist:", total_distance, "ft")),
inherit.aes = FALSE,
size = 4, color = "black") +
labs(title = "Throw Count Workloads", x = "", y = "Workload", fill = "") +
scale_x_date(date_labels = "%m/%d", breaks = sort(last_9_dates_throw)) +
theme_minimal() +
theme(
legend.position = "top",
axis.text.x = element_text(size = 18),
legend.text = element_text(size = 18),
plot.title = element_text(hjust = 0.5, size = 18, face = "bold")
)
# RX Summary
RX <- RX %>%
mutate(
Workload = Velocity * Distance * Count,
high_range = High * Distance * Count,
low_range = Low * Distance * Count
)
rx_summary <- RX %>%
group_by(Date) %>%
summarise(
RX_workload = sum(Workload, na.rm = TRUE),
RX_low = sum(low_range, na.rm = TRUE),
RX_high = sum(high_range, na.rm = TRUE)
)
Velo_summary <- Velo %>%
mutate(Velo_Workload = Velocity * Distance) %>%
drop_na() %>%
group_by(Date) %>%
summarise(
avg_velo = mean(Velocity, na.rm = TRUE),
total_distance = max(Distance, na.rm = TRUE),
velo_workload = sum(Velo_Workload, na.rm = TRUE),
throw_count = n()
)
RX_workload <- rx_summary %>%
left_join(Velo_summary, by = "Date") %>%
select(Date, RX_workload, velo_workload, RX_low, RX_high) %>%
drop_na()
rx_range <- RX_workload %>%
select(Date, RX_low, RX_high) %>%
mutate(ymin = RX_low / 1000, ymax = RX_high / 1000)
rx_long <- RX_workload %>%
pivot_longer(cols = c(RX_workload, velo_workload), names_to = "Source", values_to = "Workload")
last_9_dates <- rx_long %>%
filter(Date <= input_date) %>%
distinct(Date) %>%
arrange(desc(Date)) %>%
slice(1:10) %>%
pull(Date)
rx_long_filtered <- rx_long %>%
filter(Date %in% last_9_dates)
rx_range_filtered <- rx_range %>%
filter(Date %in% last_9_dates)
# RX Plot
RX_plot <- ggplot(rx_long_filtered, aes(x = Date, y = Workload / 1000, fill = Source)) +
geom_col(position = position_dodge(width = 1.5), width = 1.5) +
geom_errorbar(data = rx_range_filtered,
aes(x = Date, ymin = ymin, ymax = ymax),
width = 0.5,
position = position_nudge(x = -0.4),
inherit.aes = FALSE,
color = "black", size = 1) +
scale_fill_manual(values = c("RX_workload" = "gray80", "velo_workload" = "red3"),
labels = c("RX Workload", "Velocity Workload"),
guide = guide_legend(override.aes = list(color = "black"))) +
scale_x_date(date_labels = "%m/%d", breaks = sort(last_9_dates)) +
labs(x = "", y = "Workload", fill = "", title = "Velocity-Based Workload") +
theme_minimal() +
theme(
legend.position = "top",
axis.text.x = element_text(size = 18),
legend.text = element_text(size = 18),
plot.title = element_text(hjust = 0.5, size = 18, face = "bold")
)
# Combine plots and save image
combined_plot <- RX_plot + Throw_plot + plot_layout(ncol = 1)
ggsave("Scraps/CombinedWorkloadPlots.png", plot = combined_plot, width = 15, height = 17)
date <- max(cleanPulse$Date)
date_title <- format(date, "%A, %B %d, %Y")
date_pdf <- format(date, "%m-%d-%y")
title <- data.frame(" " = "") %>% gt() %>%
tab_header(title = md(glue("<b>Nate Smithburg Progression</b>")),
subtitle = md(glue("{date_title}"))) %>%
tab_style(style = cell_text(font = c(google_font("Inter Tight"), default_fonts())),
locations = list(cells_title(), cells_body())) %>%
tab_options(
data_row.padding = 0,
table.font.size = 0,
heading.title.font.size = 45,
heading.subtitle.font.size = 40,
table.border.top.width = 0,
table.border.bottom.width = 0,
heading.border.bottom.width = 0,
table_body.border.bottom.width = 0,
column_labels.border.top.width = 0,
column_labels.border.bottom.width = 0,
table_body.hlines.width = 0,
table_body.border.top.width = 0,
table.width = px(1000),
container.width = px(1000),
container.overflow.x = F
)
title <- data.frame(" " = "") %>% gt() %>%
tab_header(title = md(glue("<b>Nate Smithburg Progression</b>")),
subtitle = md(glue("{date_title}"))) %>%
tab_style(style = cell_text(font = c(google_font("Inter Tight"), default_fonts())),
locations = list(cells_title(), cells_body())) %>%
tab_options(
data_row.padding = 0,
table.font.size = 0,
heading.title.font.size = 45,
heading.subtitle.font.size = 40,
table.border.top.width = 0,
table.border.bottom.width = 0,
heading.border.bottom.width = 0,
table_body.border.bottom.width = 0,
column_labels.border.top.width = 0,
column_labels.border.bottom.width = 0,
table_body.hlines.width = 0,
table_body.border.top.width = 0,
table.width = px(1000),
container.width = px(1000),
container.overflow.x = F
)
title <- data.frame(placeholder = "") %>% gt() %>%
tab_header(title = md(glue("<b>Nate Smithburg Progression</b>")),
subtitle = md(glue("{date_title}"))) %>%
tab_style(style = cell_text(font = c(google_font("Inter Tight"), default_fonts())),
locations = list(cells_title(), cells_body())) %>%
tab_options(
data_row.padding = 0,
table.font.size = 0,
heading.title.font.size = 45,
heading.subtitle.font.size = 40,
table.border.top.width = 0,
table.border.bottom.width = 0,
heading.border.bottom.width = 0,
table_body.border.bottom.width = 0,
column_labels.border.top.width = 0,
column_labels.border.bottom.width = 0,
table_body.hlines.width = 0,
table_body.border.top.width = 0,
table.width = px(1000),
container.width = px(1000),
container.overflow.x = F
)
source("~/Documents/GitHub/OUSportScience/Baseball/BSBL2024-25/BSBLFunctions.R", echo=TRUE)
title <- data.frame(placeholder = "") %>% gt() %>%
tab_header(title = md(glue("<b>Nate Smithburg Progression</b>")),
subtitle = md(glue("{date_title}"))) %>%
tab_style(style = cell_text(font = c(google_font("Inter Tight"), default_fonts())),
locations = list(cells_title(), cells_body())) %>%
tab_options(
data_row.padding = 0,
table.font.size = 0,
heading.title.font.size = 45,
heading.subtitle.font.size = 40,
table.border.top.width = 0,
table.border.bottom.width = 0,
heading.border.bottom.width = 0,
table_body.border.bottom.width = 0,
column_labels.border.top.width = 0,
column_labels.border.bottom.width = 0,
table_body.hlines.width = 0,
table_body.border.top.width = 0,
table.width = px(1000),
container.width = px(1000),
container.overflow.x = F
)
gtsave(title, "Scraps/titleRTP.png", vwidth = 7300)
annotation <- data.frame(" " = "") %>% gt() %>%
tab_header(title = md(
"<b>Notes:</b><br>
Velocity-Based Workload: Summation of <u>Recorded Velocity</u> at <u>Distance</u> thrown.<br>
Throw-Count Workload: Summation of <u>Recorded Arm Speeds</u> of each throw.<br>
High Intensity Throws: Number of Throws that are above 85% of 5 most stressful throws from the past 2 weeks."
)) %>%
tab_style(style = cell_text(font = c(google_font("Inter Tight"), default_fonts())),
locations = list(cells_title(), cells_body(), cells_column_labels())) %>%
tab_options(
heading.title.font.size = 20,
heading.subtitle.font.size = 20,
table.border.top.width = 0,
data_row.padding = 0,
table.font.size = 0,
container.width = 1000,
table.border.bottom.width = 0,
heading.border.bottom.width = 0,
table_body.border.bottom.width = 0,
column_labels.border.top.width = 0,
column_labels.border.bottom.width = 0,
table_body.hlines.width = 0,
table_body.border.top.width = 0,
container.overflow.x = F
) %>%
tab_style(style = cell_text(align = "left"), locations = cells_title())
title <- data.frame(placeholder = "") %>% gt() %>%
tab_header(title = md(glue("<b>Nate Smithburg Progression</b>")),
subtitle = md(glue("{date_title}"))) %>%
tab_style(
style = cell_text(font = google_font("Inter Tight")),
locations = cells_title()
) %>%
tab_style(
style = cell_text(font = google_font("Inter Tight")),
locations = cells_body()
) %>%
tab_options(
data_row.padding = 0,
table.font.size = 0,
heading.title.font.size = 45,
heading.subtitle.font.size = 40,
table.border.top.width = 0,
table.border.bottom.width = 0,
heading.border.bottom.width = 0,
table_body.border.bottom.width = 0,
column_labels.border.top.width = 0,
column_labels.border.bottom.width = 0,
table_body.hlines.width = 0,
table_body.border.top.width = 0,
table.width = px(1000),
container.width = px(1000),
container.overflow.x = F
)
source("~/Documents/GitHub/OUSportScience/Baseball/BSBL2024-25/Pulse_RTP.R", echo=TRUE)
GenerateDailyWorkloadReport("4/16/2025")
source("~/Documents/GitHub/OUSportScience/Baseball/BSBL2024-25/Pulse_RTP.R", echo=TRUE)
GenerateDailyWorkloadReport("4/16/2025")
source("~/Documents/GitHub/OUSportScience/Baseball/BSBL2024-25/Pulse_RTP.R", echo=TRUE)
GenerateDailyWorkloadReport("4/16/2025")
source("~/Documents/GitHub/OUSportScience/Baseball/BSBL2024-25/Pulse_RTP.R", echo=TRUE)
GenerateDailyWorkloadReport("4/16/2025")
source("~/Documents/GitHub/OUSportScience/Baseball/BSBL2024-25/Pulse_RTP.R", echo=TRUE)
GenerateDailyWorkloadReport("4/16/2025")
source("~/Documents/GitHub/OUSportScience/Baseball/BSBL2024-25/Pulse_RTP.R", echo=TRUE)
GenerateDailyWorkloadReport("4/16/2025")
setwd("~/Documents/GitHub/HES5903/HES5903")
library(shiny); runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
runApp('Dashboard.R')
library(shiny); runApp('Dashboard.R')
